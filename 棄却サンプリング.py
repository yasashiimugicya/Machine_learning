# -*- coding: utf-8 -*-
"""棄却サンプリング.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12kfAmxCSGkRHenPqt2y4Ocs5lDn9wJ7t
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
from scipy import stats
from scipy import optimize as opt
from scipy.stats import beta, uniform
import matplotlib.pyplot as plt
# %matplotlib inline

plt.style.use("ggplot")
np.random.seed(123)

a, b = 1.5, 2.0
x = np.linspace(beta.ppf(0.001, a, b), beta.ppf(0.999, a, b), 100)
plt.plot(x, beta.pdf(x, a, b))

f = beta(a=a, b=b).pdf
res = opt.fmin(lambda x: -f(x), 0.3)
y_max = f(res)

y_max

NMCS = 5000
x_mcs = uniform.rvs(size=NMCS)
r = uniform.rvs(size=NMCS) * y_max
accept = x_mcs[r <= f(x_mcs)]
plt.hist(accept, normed=True, bins=30, rwidth=0.8, label="rejection sampling")
x = np.linspace(beta.ppf(0.001, a, b), beta.ppf(0.999, a, b), 100)
plt.plot(x, beta.pdf(x, a, b), label = "Target dis")
plt.legend()

